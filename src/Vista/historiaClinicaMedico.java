/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.util.*;
import java.awt.Label;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import Modelo.*;
import javax.swing.DefaultListModel;
/**
 *
 * @author USER
 */
public class historiaClinicaMedico extends javax.swing.JPanel {
    private DefaultListModel model =  new DefaultListModel();
    Sistema sistema = VentanaHome.Sistema_principal;
    Paciente pacSel = null;
    /**
     * Creates new form historiaClinicaMedico
     */
    public historiaClinicaMedico() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idTf = new javax.swing.JTextField();
        buscarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaEnfermedades = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        condicionTf = new javax.swing.JTextField();
        agregarBtn = new javax.swing.JButton();
        vaciarBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setText("Creación de Historia Clinica");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Introduzca el Id del paciente.");

        buscarBtn.setText("Buscar");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        listaEnfermedades.setModel(model);
        jScrollPane1.setViewportView(listaEnfermedades);

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nueva condición:");

        agregarBtn.setText("Agregar");
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });

        vaciarBtn.setText("Vaciar historia clinica");
        vaciarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaciarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(agregarBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(56, 56, 56)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(idTf, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buscarBtn)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(condicionTf, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(vaciarBtn))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(condicionTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vaciarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        String idd = idTf.getText();
        int id;
        try{
            id = Integer.parseInt(idd);
            for (Paciente i:sistema.getPacientes()){
                if (i.getIdentificacion()==id){
                    pacSel = i;
                    System.out.println("paciente seleccionado");
                    if(i.getHistoriaClinica()!= null){
                        for(String f:i.getHistoriaClinica().getEnfermedades()){
                            model.addElement(f);
                        }
                    }else{
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "El paciente no tiene una historia clinica registrada. Agregue una condición para crearla.",
                                "Historia ausente",JOptionPane.WARNING_MESSAGE);
                    }
                    break;
                }
            }
        } catch (NumberFormatException e){
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "Texto ingresado no es un numero.","Entrada inválida",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        if(pacSel!=null){
            String con = condicionTf.getText();
            if(con!=null){
                model.addElement(con);
                System.out.println("condición agregada");
                int index = VentanaHome.Sistema_principal.getPacientes().indexOf(pacSel);
                if(pacSel.getHistoriaClinica()==null){
                    HistoriaClinica hist = new HistoriaClinica(new GregorianCalendar(),pacSel,new ArrayList<String>());
                    pacSel.setHistoriaClinica(hist);
                }
                pacSel.getHistoriaClinica().getEnfermedades().add(con);
                //Guardar paciente
                VentanaHome.Sistema_principal.getPacientes().set(index, pacSel);
                System.out.println("Paciente guardado");
            }else{
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "La entrada no puede ser vacía","Entrada inválida",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "No se ha seleccionado un paciente","Entrada inválida",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void vaciarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaciarBtnActionPerformed
        if(pacSel!=null){
            JFrame parent = new JFrame();
            int confirmation = JOptionPane.showConfirmDialog(parent,
                    "Se borrará la historia clinica del paciente seleccionado, ¿está seguro?","Confirmación de borrado",JOptionPane.YES_NO_OPTION);
            if(confirmation==JOptionPane.YES_OPTION){
                model.clear();
                pacSel.setHistoriaClinica(null);
                System.out.println("historia borrada");
            }
        }else{
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "No se ha seleccionado un paciente","Entrada inválida",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_vaciarBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarBtn;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JTextField condicionTf;
    private javax.swing.JTextField idTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaEnfermedades;
    private javax.swing.JButton vaciarBtn;
    // End of variables declaration//GEN-END:variables
}
