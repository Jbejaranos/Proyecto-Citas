/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Cita;
import Modelo.Medico;
import static Modelo.Sistema.encontrarPaciente;
import com.itextpdf.text.DocumentException;
import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;


import java.io.FileOutputStream;

import com.itextpdf.text.Document;

import com.itextpdf.text.DocumentException;

import com.itextpdf.text.Paragraph; 

import com.itextpdf.text.pdf.PdfWriter; 

 import java.io.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import Modelo.Paciente;
/**
 *
 * @author Alejandro Ortiz
 */
public class Excusas extends javax.swing.JPanel {
    
    
    Paciente pac = null;
   Medico med = Vista.Login.med;
   ArrayList<Cita> citasRegistradas;
   Cita CitaACertificar = null;
   
   
public void generarPDF(String texto)throws FileNotFoundException,DocumentException{

Document document = new Document();
//String dir = imprimir_horario((GregorianCalendar)Calendar.getInstance()) + ".pdf";

PdfWriter.getInstance (document, new FileOutputStream("Excusa.pdf"));

document.open();

document.add(new Paragraph (texto));

document.close();
}


    /**
     * Creates new form Graficas
     */
    
    
    /*
    private ArrayList<Medico> medicos;
    private ArrayList<Paciente> pacientes;
    private ArrayList<Administrador> administradores;
    private ArrayList<HistoriaClinica> historiasClinicas;
    private ArrayList<Cita> citas;
    private ArrayList<Consultorio> consultorios;
    */
    




    public String imprimir_horario(GregorianCalendar horario){
        int year = horario.get(Calendar.YEAR);
        int mes = horario.get(Calendar.MONTH) + 1 ; 
        int dia = horario.get(Calendar.DAY_OF_MONTH); 
        int hora = horario.get(Calendar.HOUR_OF_DAY);
        int minuto = horario.get(Calendar.MINUTE);
        
        return  "[ " + year + " / " + mes + " / " + dia + " - " + hora + " : " + minuto
                //+ " / " + hora + " : " + minuto 
                + " ]" ;
    }
    
    
    
    public Excusas() {
        initComponents();
        
        
        //Cargar nombre del doctor y la fecha
        
        TF_nombre.setText("" + med.getNombre());
        TF_fecha.setText(imprimir_horario((GregorianCalendar)Calendar.getInstance()));
        

        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA_Formula = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TF_fecha = new javax.swing.JTextField();
        TF_nombre = new javax.swing.JTextField();
        TF_DocPac = new javax.swing.JTextField();
        TF_NombrePac = new javax.swing.JTextField();
        B_buscar = new javax.swing.JButton();
        B_generar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBackground(new java.awt.Color(153, 204, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Emisión de excusas");

        TA_Formula.setEditable(false);
        TA_Formula.setColumns(20);
        TA_Formula.setRows(5);
        jScrollPane1.setViewportView(TA_Formula);

        jLabel2.setText("En la carpeta del programa podra hallar el pdf generado");

        jLabel3.setText("Profesional: ");

        jLabel4.setText("Documento del Paciente: ");

        jLabel5.setText("Fecha de emisión: ");

        jLabel6.setText("Nombre del paciente");

        TF_fecha.setEditable(false);
        TF_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_fechaActionPerformed(evt);
            }
        });

        TF_nombre.setEditable(false);

        TF_DocPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_DocPacActionPerformed(evt);
            }
        });

        TF_NombrePac.setEditable(false);

        B_buscar.setText("Buscar");
        B_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_buscarActionPerformed(evt);
            }
        });

        B_generar.setText("Generar comprobante");
        B_generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_generarActionPerformed(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(204, 255, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Aquí podrá generar un certificado de\nasistencia para la última cita en que\nun dado paciente recibió su atención.\n");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TF_DocPac)
                                    .addComponent(TF_NombrePac)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TF_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(B_buscar)
                                            .addComponent(TF_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(B_generar))
                                        .addGap(0, 126, Short.MAX_VALUE))))
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TF_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TF_DocPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(TF_NombrePac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TF_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(B_generar)
                        .addGap(50, 50, 50)))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TF_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_fechaActionPerformed

    private void TF_DocPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_DocPacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_DocPacActionPerformed

    private void B_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_buscarActionPerformed
        // TODO add your handling code here:
        
        //Cargar paciente
        int doc =  Integer.valueOf(TF_DocPac.getText());
        try{
        pac = encontrarPaciente(doc,Vista.VentanaHome.Sistema_principal);
        TF_NombrePac.setText(pac.getNombre());
        }catch(Exception e){
            TF_NombrePac.setText("No hay ususario con el documento");
        }
        
        
    }//GEN-LAST:event_B_buscarActionPerformed

    private void B_generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_generarActionPerformed
        // TODO add your handling code here:
        
       
        
        
        //-------------------------------------------------------------------------------------------------------
        citasRegistradas = pac.getCitasRegistradas();
        
        int l = citasRegistradas.size();
        
        boolean found = false;
        for(int i =0;i<l && found == false;i++){
            
            //Hallar cita en que el paciente fue atendido por el medico autenticado
            if(citasRegistradas.get(i).getMedico().getIdentificacion() == med.getIdentificacion()){
                CitaACertificar = citasRegistradas.get(i);
                found = true;
                
            }
        }
        
        if(CitaACertificar == null){
            TA_Formula.setText("El usuario no ha asistido a citas usted, Dr./Dra.");
        }else{
            
        //---------------------------------------------------------------------------------------------------------------------------
        String TextoOrden = 
                "______________________________________________________________________________"+
                imprimir_horario((GregorianCalendar)Calendar.getInstance()) 
                +"\n\n"+
                "El profesional " + med.getNombre()+ " certifica que el paciente " + pac.getNombre() + 
                " identificado con el documento "+ pac.getIdentificacion() + " asistio a cita medica del area " + CitaACertificar.getEspecialidad() + 
                " agendada para el  " + 
                imprimir_horario((GregorianCalendar)CitaACertificar.getFecha())
                + " en la sede "+ CitaACertificar.getConsultorio().getSede() +
                "\n\n\n\n\n\n Firma Médico: __________________________________"
                + "\n\n\n\n\n______________________________________________________________________________";
        
        TA_Formula.setText(TextoOrden);
        
        try{
            generarPDF(TextoOrden);
        }catch(Exception e){
            
        }
        
        }
    }//GEN-LAST:event_B_generarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_buscar;
    private javax.swing.JButton B_generar;
    private javax.swing.JTextArea TA_Formula;
    private javax.swing.JTextField TF_DocPac;
    private javax.swing.JTextField TF_NombrePac;
    private javax.swing.JTextField TF_fecha;
    private javax.swing.JTextField TF_nombre;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
