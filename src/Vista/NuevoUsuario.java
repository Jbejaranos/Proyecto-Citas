/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import Modelo.Paciente;
import Modelo.Sistema;

/**
 *
 * @author Alejandro Ortiz
 */
public class NuevoUsuario extends javax.swing.JPanel {
    
    
    //Atributos a leer.
    int documento;
    String nombre;
    String sexo;
    String clave; 
    GregorianCalendar nacimiento;
    
    Calendar fecha_actual = Calendar.getInstance();
            
   

    /**
     * Creates new form NuevoUsuario
     */
    public NuevoUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TF_documento = new javax.swing.JTextField();
        TF_nombre = new javax.swing.JTextField();
        CB_sexo = new javax.swing.JComboBox<>();
        TF_clave = new javax.swing.JTextField();
        CB_dia = new javax.swing.JComboBox<>();
        CB_mes = new javax.swing.JComboBox<>();
        CB_year = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA_resultados = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setText("Documento");

        jLabel2.setText("Nombre");

        jLabel3.setText("Sexo");

        jLabel4.setText("Fecha de nacimiento");

        jLabel5.setText("Clave default");

        TF_documento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_documentoActionPerformed(evt);
            }
        });

        TF_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_nombreActionPerformed(evt);
            }
        });

        CB_sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        CB_sexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_sexoActionPerformed(evt);
            }
        });

        TF_clave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_claveActionPerformed(evt);
            }
        });

        CB_dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        CB_mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        CB_mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_mesActionPerformed(evt);
            }
        });

        CB_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TA_resultados.setEditable(false);
        TA_resultados.setColumns(20);
        TA_resultados.setRows(5);
        jScrollPane1.setViewportView(TA_resultados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(CB_year, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CB_mes, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CB_dia, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(58, 58, 58))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(48, 48, 48)))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TF_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CB_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TF_clave, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TF_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TF_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TF_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CB_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TF_clave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CB_dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CB_mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CB_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TF_documentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_documentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_documentoActionPerformed

    private void TF_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_nombreActionPerformed

    private void CB_sexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_sexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_sexoActionPerformed

    private void TF_claveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_claveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_claveActionPerformed

    private void CB_mesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_mesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_mesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
       
        
        
        /*
        SI HAY UN ERROR POR TIPO DE DATO COMO PONER LETRAS EN LA CEDULA SE MUESTRA MENSAJE DE ERROR.
        SI HAY CAMPOS VACIOS SE DETECTA CON UN IF Y SE PIDE AL ADMIN LLENAR LA INFORMACION FALTANRE.
        
        */
    try{
        documento = Integer.valueOf(TF_documento.getText());
        nombre = TF_nombre.getText();
        sexo = CB_sexo.getSelectedItem().toString();
        clave = TF_clave.getText();
    GregorianCalendar nacimiento = crear_horario(Integer.valueOf(CB_year.getSelectedItem().toString()),
                                        Integer.valueOf(switch_mes(CB_mes.getSelectedItem().toString())),
                                        Integer.valueOf(CB_dia.getSelectedItem().toString()),0,0);
    
    
        
        if( nombre != null && !nombre.equals("")    &&    clave != null && !clave.equals("") && !fecha_futura(nacimiento)){
            
            //add del paciente a la lista
            Sistema system = new Sistema();
            Paciente usuario_nuevo =  new Paciente(documento,nombre,clave, sexo, nacimiento);//-----------------******
            Sistema.agregar_paciente(usuario_nuevo,system);
            
            //Confirmacion visual
            TA_resultados.setText("Nuevo usuario agregado\n" +
                                    "ID   " + documento + "\n"+
                                    "Nombre   " + nombre + "\n"+
                                    "Sexo   " + sexo + "\n"+
                                    "clave default   " + clave+ "\n"
                                    + "Fecha de nacimiento  " + imprimir_horario(nacimiento) 
                                    + "\n" );
        }else{
            TA_resultados.setText("Error\nPor llene todos los campos");
            if(fecha_futura(nacimiento)){TA_resultados.setText("Error\nFecha incorrecta");}
        }
    
    }catch(Exception e){
          TA_resultados.setText("Error\nPor favor verifique los datos ingresados");
    }
    
    
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CB_dia;
    private javax.swing.JComboBox<String> CB_mes;
    private javax.swing.JComboBox<String> CB_sexo;
    private javax.swing.JComboBox<String> CB_year;
    private javax.swing.JTextArea TA_resultados;
    private javax.swing.JTextField TF_clave;
    private javax.swing.JTextField TF_documento;
    private javax.swing.JTextField TF_nombre;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables








    //year, month,dayOfMonth,hourOfDay, minute)
    public static GregorianCalendar crear_horario(int year,int month_1_12,int dayOfMonth,int hourOfDay24h,int minute){
        
        GregorianCalendar horario = new GregorianCalendar(year, month_1_12 - 1,dayOfMonth,hourOfDay24h, minute);
        return horario;
    }
    
    //Mes en la clase calendar va de 0 a 11,resulta mas intuitivo usar 1 a 12,a esto se deben los +1 y -1
    
    
    
    public boolean fecha_futura(Calendar fecha){
        
        boolean r = false;
        
        if(fecha_actual.get(Calendar.YEAR)<fecha.get(Calendar.YEAR) ||
           ( fecha_actual.get(Calendar.YEAR) == fecha.get(Calendar.YEAR) && fecha_actual.get(Calendar.MONTH)< fecha.get(Calendar.MONTH) ) ||
                
           (    ( fecha_actual.get(Calendar.YEAR) == fecha.get(Calendar.YEAR) && fecha_actual.get(Calendar.MONTH)== fecha.get(Calendar.MONTH) ) &&
           fecha_actual.get(Calendar.DAY_OF_MONTH)<fecha.get(Calendar.DAY_OF_MONTH))   ){
            
            r = true;
        }
        
        return r;
    }
    
    public String imprimir_horario(GregorianCalendar horario){
        int year = horario.get(Calendar.YEAR);
        int mes = horario.get(Calendar.MONTH) + 1 ; 
        int dia = horario.get(Calendar.DAY_OF_MONTH); 
        int hora = horario.get(Calendar.HOUR_OF_DAY);
        int minuto = horario.get(Calendar.MINUTE);
        
        return  "[ " + year + " / " + mes + " / " + dia 
                //+ " / " + hora + " : " + minuto 
                + " ]" ;
    }

    public int switch_mes(String mes){
        int r = 1;
        
        switch (mes){
            
            case "Enero":
                r = 1;
                break;
                
            case "Febrero":
                r = 2;
                break;
                
            case "Marzo":
                r = 3;
                break;
                
            case "Abril":
                r = 4;
                break;
                
            case "Mayo":
                r = 5;
                break;
                
            case "Junio":
                r = 6;
                break;
                
            case "Julio":
                r = 7;
                break;
                
            case "Agosto":
                r = 8;
                break;
                
            case "Septiembre":
                r = 9;
                break;
                
            case "Octubre":
                r = 10;
                break;
                
            case "Noviembre":
                r = 11;
                break;
                
            case "Diciembre":
                r = 12;
                break;
                
        }
        
        return r;
    }




}
