/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Cita;
import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Alejandro Ortiz
 */
public class Graficas extends javax.swing.JPanel {

    /**
     * Creates new form Graficas
     */
    
    
    /*
    private ArrayList<Medico> medicos;
    private ArrayList<Paciente> pacientes;
    private ArrayList<Administrador> administradores;
    private ArrayList<HistoriaClinica> historiasClinicas;
    private ArrayList<Cita> citas;
    private ArrayList<Consultorio> consultorios;
    */
    
    public Graficas() {
        initComponents();
        
        String estadisticas = "";
        
        estadisticas = 
                
        "\nPacientes inscritos: " + Vista.VentanaHome.Sistema_principal.getPacientes().size() +
                
        "\nMédicos empleados: " +  Vista.VentanaHome.Sistema_principal.getMedicos().size() +
        "\nCitas existentes: " + Vista.VentanaHome.Sistema_principal.getCitas().size() +
        "\nNumero de consultorios de la red: " + Vista.VentanaHome.Sistema_principal.getConsultorios().size() +"\n" ;
        
        
        
        
        
        int NumPacs = Vista.VentanaHome.Sistema_principal.getPacientes().size();
        int PacientesConCitas = 0;
        
        for(int i = 0; i<NumPacs; i++){
            
            if(Vista.VentanaHome.Sistema_principal.getPacientes().get(i).getCitasRegistradas().size() >= 1  ){
                    PacientesConCitas++;
            }
            
        }
        
        String Indicadores = "";
        
        int PacientesOcupados = 0;
        try{
            PacientesOcupados = (PacientesConCitas * 100) / NumPacs;  //PORCENTAJE DE PACIENTES CON UNA O MAS CITAS
        }catch(Exception e){
            PacientesOcupados = 0;
        }
        
        
        
        int AfiliadosXmedico = 0;
        try{
            AfiliadosXmedico=  NumPacs / (Vista.VentanaHome.Sistema_principal.getMedicos().size());
        }catch(Exception e){
            AfiliadosXmedico = 0;
        }
        
        Indicadores  = "Pacientes que tienen citas agendadas: " + PacientesOcupados +" %" +
                    "\n\nPor 1 médico hay " + AfiliadosXmedico + " Pacientes afiliados";
        
        
        TADatos.setText(estadisticas);
        TAIndicadores.setText(Indicadores);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mostrarPastel = new javax.swing.JButton();
        CitasAgendadas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TADatos = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TAIndicadores = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(153, 204, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        mostrarPastel.setText("Oferta de citas");
        mostrarPastel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarPastelActionPerformed(evt);
            }
        });

        CitasAgendadas.setText("Citas Libres");
        CitasAgendadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CitasAgendadasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Datos del Sistema");

        TADatos.setColumns(20);
        TADatos.setRows(5);
        jScrollPane1.setViewportView(TADatos);

        TAIndicadores.setColumns(20);
        TAIndicadores.setRows(5);
        jScrollPane2.setViewportView(TAIndicadores);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mostrarPastel, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CitasAgendadas, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostrarPastel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CitasAgendadas, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarPastelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarPastelActionPerformed
        // TODO add your handling code here:
        
        /*
        
        PLANTILLA
        
        DefaultPieDataset pieDataset= new DefaultPieDataset();
        
        
        pieDataset.setValue("One", new Integer (10) );
        pieDataset.setValue("Two", new Integer (20)); 
        pieDataset.setValue("Three", new Integer (30) );
        pieDataset.setValue("Four", new Integer (40) ); 
        
        JFreeChart chart= ChartFactory.createPieChart("Pie Chart", pieDataset, true, true, true); 
               
        PiePlot P =(PiePlot) chart.getPlot();

        //P.sec Foreground Alpha (TOP ALIGNMENT):

        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        
        frame.setVisible(true); 
        frame.setSize(450, 500); 
        frame.setSize (450, 500);
        
        
        */
        
        /*
            "General",
            "Alergología",
            "Anestesiología",
            "Cardiología",
            "Gastroenterología",
            "Endocrinología",
            "Epidemiología",
            "Geriatría",
            "Hepatología",
            "Hematología",
            "Infectología",
            "Medicina familiar y comunitaria",
            "Medicina física y rehabilitación",
            "Medicina intensiva",
            "Medicina interna",
            "Medicina preventiva y salud pública",
            "Nefrología",
            "Neumología",
            "Neurología",
            "Nutriología",
            "Oncología",
            "Pediatría",
            "Psiquiatría",
            "Reumatología",
            "Toxicología"
        */
        
        
        
        
        
        
        /*
    private ArrayList<Medico> medicos;
    private ArrayList<Paciente> pacientes;
    private ArrayList<Administrador> administradores;
    private ArrayList<HistoriaClinica> historiasClinicas;
    private ArrayList<Cita> citas;
    private ArrayList<Consultorio> consultorios;
        */
        
        
        
        
        String[] especialidades = {
        
            "General",
            "Alergología",
            "Anestesiología",
            "Cardiología",
            "Gastroenterología",
            "Endocrinología",
            "Epidemiología",
            "Geriatría",
            "Hepatología",
            "Hematología",
            "Infectología",
            "Medicina familiar y comunitaria",
            "Medicina física y rehabilitación",
            "Medicina intensiva",
            "Medicina interna",
            "Medicina preventiva y salud pública",
            "Nefrología",
            "Neumología",
            "Neurología",
            "Nutriología",
            "Oncología",
            "Pediatría",
            "Psiquiatría",
            "Reumatología",
            "Toxicología" 
        };
        
        int NumEspcialidades = especialidades.length;
        
        int[] aparicionesEspecialidades = new int[NumEspcialidades];
        

        ArrayList<Cita> ArregloCitas = Vista.VentanaHome.Sistema_principal.getCitas();
        int NumCitas = ArregloCitas.size();
        
        
        
        
        
        
        //______________________________________________________________________________________________________________________________________-
        
        for(int i = 0; i<NumCitas;i++){
            
            String s = ArregloCitas.get(i).getEspecialidad();
            switch(s){
    
                
                case "General":
                    aparicionesEspecialidades[0]++;
                break;
                
                case "Alergología":
                    aparicionesEspecialidades[1]++;
                break;
                
                case "Anestesiología":
                    aparicionesEspecialidades[2]++;
                break;
                
                case "Cardiología":
                    aparicionesEspecialidades[3]++;
                break;
                    
                case "Gastroenterología":
                    aparicionesEspecialidades[4]++;
                break;
                
                case "Endocrinología":
                    aparicionesEspecialidades[5]++;
                break;
                
                case "Epidemiología":
                    aparicionesEspecialidades[6]++;
                break;
                
                case "Geriatría":
                    aparicionesEspecialidades[7]++;
                break;
                
                case "Hepatología":
                    aparicionesEspecialidades[8]++;
                break;
                
                case "Hematología":
                    aparicionesEspecialidades[9]++;
                break;
                
                case "Infectología":
                    aparicionesEspecialidades[10]++;
                break;
                
                case "Medicina familiar y comunitaria":
                    aparicionesEspecialidades[11]++;
                break;
                
                case "Medicina física y rehabilitación":
                    aparicionesEspecialidades[12]++;
                break;
                
                case "Medicina intensiva":
                    aparicionesEspecialidades[13]++;
                break;
                
                case "Medicina interna":
                    aparicionesEspecialidades[14]++;
                break;
                
                case "Medicina preventiva y salud pública":
                    aparicionesEspecialidades[15]++;
                break;
                
                case "Nefrología":
                    aparicionesEspecialidades[16]++;
                break;
                
                case "Neumología":
                    aparicionesEspecialidades[17]++;
                break;
                
                case  "Neurología":
                    aparicionesEspecialidades[18]++;
                break;
                
                case  "Nutriología":
                    aparicionesEspecialidades[19]++;
                break;
                
                case "Oncología":
                    aparicionesEspecialidades[20]++;
                break;
                
                case "Pediatría":
                    aparicionesEspecialidades[21]++;
                break;
                
                case "Psiquiatría":
                    aparicionesEspecialidades[22]++;
                break;
                
                case "Reumatología":
                    aparicionesEspecialidades[23]++;
                break;
                
                case "Toxicología" :
                    aparicionesEspecialidades[24]++;
                break;
                    
            }
        }
        
        DefaultPieDataset pieDataset= new DefaultPieDataset();
        
        for(int i = 0; i<NumEspcialidades;i++){
            
            if( aparicionesEspecialidades[i] > 0){
                 pieDataset.setValue(especialidades[i],  aparicionesEspecialidades[i]);
            }
            
        }
//        pieDataset.setValue("Two", new Integer (20)); 
//        pieDataset.setValue("Three", new Integer (30) );
//        pieDataset.setValue("Four", new Integer (40) ); 
        
        JFreeChart chart= ChartFactory.createPieChart("Oferta de Citas", pieDataset, true, true, true); 
               
        PiePlot P =(PiePlot) chart.getPlot();

        //P.sec Foreground Alpha (TOP ALIGNMENT):

        ChartFrame frame = new ChartFrame("Oferta de Citas", chart);
        
        frame.setVisible(true); 
        frame.setSize(450, 500); 
        frame.setSize (450, 500);
        
        //_________________________________________________________________________________________________________________________________________________-
        
        
       
        
    }//GEN-LAST:event_mostrarPastelActionPerformed

    private void CitasAgendadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CitasAgendadasActionPerformed
        // TODO add your handling code here:
        
                //______________________________________________________________________________________________________________________________________
                
                
                
        
        String[] especialidades = {
        
            "General",
            "Alergología",
            "Anestesiología",
            "Cardiología",
            "Gastroenterología",
            "Endocrinología",
            "Epidemiología",
            "Geriatría",
            "Hepatología",
            "Hematología",
            "Infectología",
            "Medicina familiar y comunitaria",
            "Medicina física y rehabilitación",
            "Medicina intensiva",
            "Medicina interna",
            "Medicina preventiva y salud pública",
            "Nefrología",
            "Neumología",
            "Neurología",
            "Nutriología",
            "Oncología",
            "Pediatría",
            "Psiquiatría",
            "Reumatología",
            "Toxicología" 
        };
        
        int NumEspcialidades = especialidades.length;
        
        int[] aparicionesEspecialidades = new int[NumEspcialidades];
        

        ArrayList<Cita> ArregloCitas = Vista.VentanaHome.Sistema_principal.getCitas();
        int NumCitas = ArregloCitas.size();
        
        

            for(int i = 0; i<NumCitas;i++){
            
            if(ArregloCitas.get(i).getPaciente() ==null){
                
            
            String s = ArregloCitas.get(i).getEspecialidad();
            switch(s){
    
                
                case "General":
                    aparicionesEspecialidades[0]++;
                break;
                
                case "Alergología":
                    aparicionesEspecialidades[1]++;
                break;
                
                case "Anestesiología":
                    aparicionesEspecialidades[2]++;
                break;
                
                case "Cardiología":
                    aparicionesEspecialidades[3]++;
                break;
                    
                case "Gastroenterología":
                    aparicionesEspecialidades[4]++;
                break;
                
                case "Endocrinología":
                    aparicionesEspecialidades[5]++;
                break;
                
                case "Epidemiología":
                    aparicionesEspecialidades[6]++;
                break;
                
                case "Geriatría":
                    aparicionesEspecialidades[7]++;
                break;
                
                case "Hepatología":
                    aparicionesEspecialidades[8]++;
                break;
                
                case "Hematología":
                    aparicionesEspecialidades[9]++;
                break;
                
                case "Infectología":
                    aparicionesEspecialidades[10]++;
                break;
                
                case "Medicina familiar y comunitaria":
                    aparicionesEspecialidades[11]++;
                break;
                
                case "Medicina física y rehabilitación":
                    aparicionesEspecialidades[12]++;
                break;
                
                case "Medicina intensiva":
                    aparicionesEspecialidades[13]++;
                break;
                
                case "Medicina interna":
                    aparicionesEspecialidades[14]++;
                break;
                
                case "Medicina preventiva y salud pública":
                    aparicionesEspecialidades[15]++;
                break;
                
                case "Nefrología":
                    aparicionesEspecialidades[16]++;
                break;
                
                case "Neumología":
                    aparicionesEspecialidades[17]++;
                break;
                
                case  "Neurología":
                    aparicionesEspecialidades[18]++;
                break;
                
                case  "Nutriología":
                    aparicionesEspecialidades[19]++;
                break;
                
                case "Oncología":
                    aparicionesEspecialidades[20]++;
                break;
                
                case "Pediatría":
                    aparicionesEspecialidades[21]++;
                break;
                
                case "Psiquiatría":
                    aparicionesEspecialidades[22]++;
                break;
                
                case "Reumatología":
                    aparicionesEspecialidades[23]++;
                break;
                
                case "Toxicología" :
                    aparicionesEspecialidades[24]++;
                break;
                    
            }
        }
            }
              
        DefaultPieDataset pieDatasetLibres= new DefaultPieDataset();
        
        for(int i = 0; i<NumEspcialidades;i++){
            
            if( aparicionesEspecialidades[i] > 0){
                 pieDatasetLibres.setValue(especialidades[i],  aparicionesEspecialidades[i]);
            }
            
        }
//        pieDataset.setValue("Two", new Integer (20)); 
//        pieDataset.setValue("Three", new Integer (30) );
//        pieDataset.setValue("Four", new Integer (40) ); 
        
        JFreeChart chartLibres= ChartFactory.createPieChart("Citas Libres", pieDatasetLibres, true, true, true); 
               
        PiePlot PLibres =(PiePlot) chartLibres.getPlot();

        //P.sec Foreground Alpha (TOP ALIGNMENT):

        ChartFrame frameLibres = new ChartFrame("Oferta de Citas Libres", chartLibres);
        
        frameLibres.setVisible(true); 
        frameLibres.setSize(450, 500); 
        frameLibres.setSize (450, 500);
        
        //_________________________________________________________________________________________________________________________________________________-
        
    }//GEN-LAST:event_CitasAgendadasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CitasAgendadas;
    private javax.swing.JTextArea TADatos;
    private javax.swing.JTextArea TAIndicadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton mostrarPastel;
    // End of variables declaration//GEN-END:variables
}
