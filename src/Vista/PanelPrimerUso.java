/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Administrador;
import Modelo.Consultorio;
import Modelo.Medico;
import Modelo.Paciente;
import Modelo.Sistema;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Jorge
 */
public class PanelPrimerUso extends javax.swing.JPanel {
    
    // Variable entera para el manejo de paneles
    private int manejoVentanas = 0;
    
    // Objetos en los cuales se guarda la información ingresada por el administrador
    private Administrador administrador;
    private Medico medico;
    private Paciente paciente;
    private ArrayList<Consultorio> consultorios;
    
    // Paneles para creación de usuarios tipo:
    // Administrador, médico y paciente
    // Así mismo formulario para la creación de consultorios
    private PanelPrimerUsoCrearAdmin crearAdmin = new PanelPrimerUsoCrearAdmin();
    private PanelPrimerUsoCrearMedico crearMedico = new PanelPrimerUsoCrearMedico();
    private PanelPrimerUsoCrearPaciente crearPaciente = new PanelPrimerUsoCrearPaciente();
    private PanelPrimerUsoPlantaFisica plantaFisica = new PanelPrimerUsoPlantaFisica();

    /**
     * Creates new form PanelPrimerUso
     */
    public PanelPrimerUso() {
        this.administrador = new Administrador(-1, "", "", "", null);
        this.medico = new Medico(-1, "", "", "", null, "");
        this.paciente = new Paciente(-1, "", "", "", null);
        this.consultorios = new ArrayList<>();
        
        initComponents();
        descriptionTF.setEditable(false);
        
        crearAdmin.setLocation(2, 2);
        crearAdmin.setSize(610, 220);
        panelVariante.add(crearAdmin);
        panelVariante.revalidate();
        panelVariante.repaint();
        previousBtn.setEnabled(false);
        omitirBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTF = new javax.swing.JTextArea();
        panelVariante = new javax.swing.JPanel();
        previousBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        omitirBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));

        panelTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        panelTitle.setText("Sistema de agendamiento de citas médicas");

        descriptionTF.setColumns(10);
        descriptionTF.setLineWrap(true);
        descriptionTF.setRows(5);
        descriptionTF.setText("Bienvenido al sistema de agendamiento de citas médicas, a continuación podrá encontrar diferentes formularios en los cuales podrá ingresar información inicial sobre médicos, pacientes y la planta física de la entidad prestadora de salud. El sistema cuenta con diferentes funcionalidades que le permitirán como administrador la correcta gestión de la información usada en las diferentes sedes de la entidad.");
        descriptionTF.setAutoscrolls(false);
        jScrollPane1.setViewportView(descriptionTF);

        panelVariante.setBackground(new java.awt.Color(204, 204, 255));
        panelVariante.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelVarianteLayout = new javax.swing.GroupLayout(panelVariante);
        panelVariante.setLayout(panelVarianteLayout);
        panelVarianteLayout.setHorizontalGroup(
            panelVarianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelVarianteLayout.setVerticalGroup(
            panelVarianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
        );

        previousBtn.setText("Anterior");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Siguiente");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        omitirBtn.setText("Omitir");
        omitirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omitirBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                            .addComponent(panelVariante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(previousBtn)
                        .addGap(78, 78, 78)
                        .addComponent(omitirBtn)
                        .addGap(73, 73, 73)
                        .addComponent(nextBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(panelTitle)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(panelTitle)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelVariante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousBtn)
                    .addComponent(omitirBtn)
                    .addComponent(nextBtn))
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void registrarInformacion(int panel){
        
        switch(panel){
            case 0:
                String nombreAdmin = this.crearAdmin.getNombre();
                this.administrador.setNombre(nombreAdmin);

                String generoAdmin = this.crearAdmin.getGenero();
                this.administrador.setGenero(generoAdmin);

                Calendar fechaNacimientoAdmin = this.crearAdmin.getFechaNacimiento();
                this.administrador.setFechaNacimiento(fechaNacimientoAdmin);

                int idAdmin = this.crearAdmin.getIdentificacion();
                this.administrador.setIdentificacion(idAdmin);

                String passwordAdmin = this.crearAdmin.getPasswordEncrypted();
                this.administrador.setPassword(passwordAdmin);
                break;
            case 1:
                String nombreMedico = this.crearMedico.getNombre();
                this.medico.setNombre(nombreMedico);
                
                String generoMedico = this.crearMedico.getGenero();
                this.medico.setGenero(generoMedico);
                
                String especialidad = this.crearMedico.getEspecialidad();
                this.medico.setEspecialidad(especialidad);
                
                Calendar fechaNacimientoMedico = this.crearMedico.getFechaNacimiento();
                this.medico.setFechaNacimiento(fechaNacimientoMedico);

                int idMedico = this.crearMedico.getIdentificacion();
                this.medico.setIdentificacion(idMedico);

                String passwordMedico = this.crearMedico.getPasswordEncrypted();
                this.medico.setPassword(passwordMedico);
                break;
            case 2:
                String nombrePaciente = this.crearPaciente.getNombre();
                this.paciente.setNombre(nombrePaciente);
                
                String generoPaciente = this.crearPaciente.getGenero();
                this.paciente.setGenero(generoPaciente);
                
                Calendar fechaNacimientoPaciente = this.crearPaciente.getFechaNacimiento();
                this.paciente.setFechaNacimiento(fechaNacimientoPaciente);
                
                int idPaciente = this.crearPaciente.getIdentificacion();
                this.paciente.setIdentificacion(idPaciente);
                
                String passwordPaciente = this.crearPaciente.getPasswordEncrypted();
                this.paciente.setPassword(passwordPaciente);
                break;
            case 3:
                this.consultorios = this.plantaFisica.getConsultorios();
                break;
        }
    }
    
    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        // TODO add your handling code here:
        VentanaHome.controlSesion.restart();
        this.manejoVentanas--;
        
        switch(this.manejoVentanas){
            case 0:
                crearAdmin.setLocation(2, 2);
                crearAdmin.setSize(610, 220);
                panelVariante.removeAll();
                panelVariante.add(crearAdmin);
                panelVariante.revalidate();
                panelVariante.repaint();
                previousBtn.setEnabled(false);
                omitirBtn.setVisible(false);
                break;
            case 1:
                crearMedico.setLocation(2, 2);
                crearMedico.setSize(610, 220);
                panelVariante.removeAll();
                panelVariante.add(crearMedico);
                panelVariante.revalidate();
                panelVariante.repaint();
                break;
            case 2:
                crearPaciente.setLocation(2, 2);
                crearPaciente.setSize(610, 220);
                panelVariante.removeAll();
                panelVariante.add(crearPaciente);
                panelVariante.revalidate();
                panelVariante.repaint();
                nextBtn.setText("Siguiente");
                break;
        }
    }//GEN-LAST:event_previousBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        VentanaHome.controlSesion.restart();
        this.manejoVentanas++;
        
        switch(this.manejoVentanas){
            case 1:
                if(this.crearAdmin.confirmarInformacion()){
                    registrarInformacion(0);
                    crearMedico.setLocation(2, 2);
                    crearMedico.setSize(610, 220);
                    panelVariante.removeAll();
                    panelVariante.add(crearMedico);
                    panelVariante.revalidate();
                    panelVariante.repaint();
                    previousBtn.setEnabled(true);
                    omitirBtn.setVisible(true);
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
                    this.manejoVentanas--;
                }
                break;
            case 2:
                if(this.crearMedico.confirmarInformacion()){
                    registrarInformacion(1);
                    crearPaciente.setLocation(2, 2);
                    crearPaciente.setSize(610, 220);
                    panelVariante.removeAll();
                    panelVariante.add(crearPaciente);
                    panelVariante.revalidate();
                    panelVariante.repaint();
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
                    this.manejoVentanas--;
                }
                break;
            case 3:
                if(this.crearPaciente.confirmarInformacion()){
                    registrarInformacion(2);
                    plantaFisica.setLocation(2, 2);
                    plantaFisica.setSize(610, 220);
                    panelVariante.removeAll();
                    panelVariante.add(plantaFisica);
                    panelVariante.revalidate();
                    panelVariante.repaint();
                    nextBtn.setText("Finalizar");
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
                    this.manejoVentanas--;
                }
                break;
            case 4:
                VentanaHome.Sistema_principal.getAdministradores().add(administrador);
                if(this.plantaFisica.comprobarInformacion()){
                    registrarInformacion(3);
                    if(this.medico.getIdentificacion() != -1){
                        VentanaHome.Sistema_principal.getMedicos().add(medico);
                    }
                    if(this.paciente.getIdentificacion() != -1){
                        VentanaHome.Sistema_principal.getPacientes().add(paciente);
                    }
                    for(Consultorio c: this.consultorios){
                        VentanaHome.Sistema_principal.getConsultorios().add(c);
                    }
                    VentanaHome.logIn();
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
                    this.manejoVentanas--;
                }
                break;
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void omitirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omitirBtnActionPerformed
        // TODO add your handling code here:
        VentanaHome.controlSesion.restart();
        this.manejoVentanas++;
        
        switch(this.manejoVentanas){
            case 2:
                crearPaciente.setLocation(2, 2);
                crearPaciente.setSize(610, 220);
                panelVariante.removeAll();
                panelVariante.add(crearPaciente);
                panelVariante.revalidate();
                panelVariante.repaint();
                break;
            case 3:
                plantaFisica.setLocation(2, 2);
                plantaFisica.setSize(610, 220);
                panelVariante.removeAll();
                panelVariante.add(plantaFisica);
                panelVariante.revalidate();
                panelVariante.repaint();
                nextBtn.setText("Finalizar");
                break;
            case 4:
                VentanaHome.Sistema_principal.getAdministradores().add(administrador);
                if(this.medico.getIdentificacion() != -1){
                    VentanaHome.Sistema_principal.getMedicos().add(medico);
                }
                if(this.paciente.getIdentificacion() != -1){
                    VentanaHome.Sistema_principal.getPacientes().add(paciente);
                }
                VentanaHome.logIn();
                break;
        }
    }//GEN-LAST:event_omitirBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton omitirBtn;
    private javax.swing.JLabel panelTitle;
    private javax.swing.JPanel panelVariante;
    private javax.swing.JButton previousBtn;
    // End of variables declaration//GEN-END:variables
}
