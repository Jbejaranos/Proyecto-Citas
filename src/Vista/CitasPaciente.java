/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Cita;
import Modelo.Paciente;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge
 */
public class CitasPaciente extends javax.swing.JPanel {
    
    Paciente paciente;

    /**
     * Creates new form CitasPaciente
     * @param paciente
     */
    public CitasPaciente(Paciente paciente) {
        this.paciente = paciente;
        initComponents();
        
        //try{
            
        if(paciente != null && this.paciente.getCitasRegistradas().size()>0){
            DefaultTableModel model = (DefaultTableModel) citasPaciente.getModel();
            for (int i = 0; i < this.paciente.getCitasRegistradas().size(); i++){
                String fecha = getTextoFecha(this.paciente.getCitasRegistradas().get(i).getFecha());
                String especialidad = this.paciente.getCitasRegistradas().get(i).getEspecialidad();
                String medico = this.paciente.getCitasRegistradas().get(i).getMedico().getNombre();
                String lugar = this.paciente.getCitasRegistradas().get(i).getConsultorio().getSede();
                model.addRow(new Object[]{fecha, especialidad, medico, lugar});
            }
        }
        
        
       // }catch(Exception e){
            
        //}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloPanel = new javax.swing.JLabel();
        tablaCitas = new javax.swing.JScrollPane();
        citasPaciente = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        verDetallesB = new javax.swing.JButton();
        cancelarCitaB = new javax.swing.JButton();

        tituloPanel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tituloPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloPanel.setText("Citas Asignadas");

        citasPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Especialidad", "MÃ©dico", "Lugar"
            }
        ));
        tablaCitas.setViewportView(citasPaciente);

        verDetallesB.setText("Ver detalles");
        verDetallesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDetallesBActionPerformed(evt);
            }
        });

        cancelarCitaB.setText("Cancelar cita");
        cancelarCitaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarCitaBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(verDetallesB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelarCitaB)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verDetallesB)
                    .addComponent(cancelarCitaB))
                .addGap(0, 26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(tituloPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tablaCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloPanel)
                .addGap(18, 18, 18)
                .addComponent(tablaCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void verDetallesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDetallesBActionPerformed
        // TODO add your handling code here:
        VentanaHome.controlSesion.restart();
        int seleccion = citasPaciente.getSelectedRow();
        if(seleccion != -1){
            Cita cita = paciente.getCitasRegistradas().get(seleccion);
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fecha = "Fecha: " + formato.format(cita.getFecha().getTime()) + "\n";
            int hour = cita.getFecha().get(Calendar.HOUR);
            int minute = cita.getFecha().get(Calendar.MINUTE);
            String horaDia = "";
            String minuto = "";
            String AM_PM = (cita.getFecha().get(Calendar.AM_PM) == 0) ? "AM" : "PM";
            if(hour < 10){
                horaDia = "0" + hour;
            }else{
                horaDia = "" + hour;
            }
            if(minute < 10){
                minuto = "0" + minute;
            }else{
                minuto = "" + minute;
            }
            String hora = "Hora: " + horaDia + ":" + minuto + " " + AM_PM + "\n";
            String medico = "Medico: " + cita.getMedico().getNombre() + "\n";
            String especialidad = "Especialidad: " + cita.getEspecialidad() + "\n";
            String consultorio = "Lugar: Consultorio " + cita.getConsultorio().getNumero() + ", sede " + cita.getConsultorio().getSede() + "\n";
            JOptionPane.showMessageDialog(null, fecha + hora + medico + especialidad + consultorio);
        }else{
            JOptionPane.showMessageDialog(null, "Por favor seleccione una cita");
        }
    }//GEN-LAST:event_verDetallesBActionPerformed

    private void cancelarCitaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarCitaBActionPerformed
        // TODO add your handling code here:
        VentanaHome.controlSesion.restart();
        int seleccion = citasPaciente.getSelectedRow();
        if(seleccion != -1){
            boolean result = paciente.cancelarCita(paciente.getCitasRegistradas().get(seleccion).getFecha());
            int modelIndex = citasPaciente.convertRowIndexToModel(seleccion);
            DefaultTableModel model = (DefaultTableModel) citasPaciente.getModel();
            model.removeRow(modelIndex);
            if(result){
                JOptionPane.showMessageDialog(null, "Cita cancelada");
            }else{
                JOptionPane.showMessageDialog(null, "Error al cancelar la cita");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Por favor seleccione una cita");
        }
    }//GEN-LAST:event_cancelarCitaBActionPerformed

    public static String getTextoFecha(Calendar fecha){
        String res = "";
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int mes = fecha.get(Calendar.MONTH) + 1;
        int year = fecha.get(Calendar.YEAR);
        res += dia + "/" + mes + "/" + year;
        return res;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarCitaB;
    private javax.swing.JTable citasPaciente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane tablaCitas;
    private javax.swing.JLabel tituloPanel;
    private javax.swing.JButton verDetallesB;
    // End of variables declaration//GEN-END:variables
}

